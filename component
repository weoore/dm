using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static void Main(string[] args)
    {
        string[] input = Console.ReadLine().Split();
        int n = int.Parse(input[0]);
        int m = int.Parse(input[1]);

        List<int>[] ribs = new List<int>[m];
        List<int> points = Enumerable.Range(1, n).ToList();
        Console.WriteLine(string.Join(" ", points));

        for (int i = 0; i < m; i++)
        {
            int[] ribInput = Console.ReadLine().Split().Select(int.Parse).ToArray();
            ribs[i] = new List<int>(ribInput);
        }

        ribs = ribs.OrderBy(x => x[0]).ToArray();
        List<List<int>> comp = new List<List<int>>();

        List<int> tec = new List<int>();
        int j = 0;

        while (j < m)
        {
            for (int i = 0; i < m; i++)
            {
                Console.WriteLine(j + " " + i);
                if (points[j] == ribs[i][0])
                {
                    tec.Add(ribs[i][1]);
                }
                else if (points[j] == ribs[i][1])
                {
                    tec.Add(ribs[i][0]);
                }
            }

            tec.Add(points[j]);
            comp.Add(new List<int>(tec));
            j++;
            tec.Clear();
        }

        for (int i = 0; i < comp.Count - 1; i++)
        {
            for (int z = i + 1; z < comp.Count; z++)
            {
                if (comp[z].Intersect(comp[z]).Any())
                {
                    comp[i] = comp[i].Union(comp[z]).ToList();
                    comp[z].Clear();
                }
            }
        }

        List<List<int>> end = new List<List<int>>();
        foreach (var item in comp)
        {
            if (item.Count > 0 && !end.Any(i => i.SequenceEqual(item.OrderBy(x => x))))
            {
                end.Add(item.OrderBy(x => x).ToList());
            }
        }

        List<List<int>> result = new List<List<int>>();
        foreach (var item in end)
        {
            if (!result.Any(i => i.SequenceEqual(item.OrderBy(x => x))))
            {
                result.Add(item);
            }
        }

        foreach (var item in result)
        {
            Console.WriteLine(string.Join(" ", item));
        }
    }
}****
