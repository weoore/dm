using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static void Main(string[] args)
    {
        List<(int, int, int)> R = new List<(int, int, int)>()
        {
            (2, 1, 2),
            (2, 1, 3),
            (7, 1, 5),
            (2, 2, 3),
            (9, 2, 4),
            (2, 2, 5),
            (5, 3, 5),
            (10, 4, 5),
            (5, 4, 6),
            (2, 4, 7),
            (16, 4, 8),
            (9, 5, 7),
            (17, 6, 8),
            (17, 7, 8)
        };

        var Rs = R.OrderBy(x => x.Item1);
        HashSet<int> U = new HashSet<int>();
        Dictionary<int, List<int>> D = new Dictionary<int, List<int>>();
        List<(int, int, int)> T = new List<(int, int, int)>();

        int sumLength = 0;
        foreach (var r in Rs)
        {
            if (!U.Contains(r.Item2) || !U.Contains(r.Item3))
            {
                if (!U.Contains(r.Item2) && !U.Contains(r.Item3))
                {
                    D[r.Item2] = new List<int>() { r.Item2, r.Item3 };
                    D[r.Item3] = D[r.Item2];
                }
                else
                {
                    if (!D.ContainsKey(r.Item2))
                    {
                        D[r.Item2] = new List<int>() { r.Item3 };
                        D[r.Item3] = D[r.Item2];
                    }
                    else
                    {
                        D[r.Item2].Add(r.Item3);
                        D[r.Item3] = D[r.Item2];
                    }
                }
                T.Add(r);
                U.Add(r.Item2);
                U.Add(r.Item3);
                sumLength += r.Item1;
            }
        }

        foreach (var r in Rs)
        {
            if (!D[r.Item2].Contains(r.Item3))
            {
                T.Add(r);
                var gr1 = D[r.Item2];
                D[r.Item2].AddRange(D[r.Item3]);
                D[r.Item3].AddRange(gr1);
                sumLength += r.Item1;
            }
        }

        Console.WriteLine(sumLength);
    }
}
